package http

import (
	"fmt"
	"io/ioutil"
	"net/http"
	"net/http/httptest"
	"os"
	"strings"
	"testing"
)

func HandleRun(t *testing.T, method string, url string, expected string) {
	req, err := http.NewRequest(method, url, nil)
	if err != nil {
		t.Fatal(err)
	}

	w := httptest.NewRecorder()
	http.DefaultServeMux.ServeHTTP(w, req)

	status := w.Code
	fmt.Println(status)
	resp := w.Result()
	body, _ := ioutil.ReadAll(resp.Body)
	fmt.Println(resp.Header.Get("Content-Type"))
	if !strings.Contains(string(body), expected) {
		t.Logf("Expected: %v", expected)
		t.Fatalf("\n\n Got: %v\n", string(body))

	}

}

func Test_Handlers(t *testing.T) {
	SetupHandles()
	HandleRun(t, "GET", "/", "version:")
	HandleRun(t, "POST", "/", "post")
	fmt.Printf("len:  %v\n", len(os.Getenv("GITHUB_TOKEN")))

	if len(os.Getenv("GITHUB_TOKEN")) != 0 {
		HandleRun(t, "GET", "/cards", "/cmd :agil:todo")
		HandleRun(t, "GET", "/timestampit", ":")
	}
	HandleRun(t, "GET", "/circle", "Generated by SVGo")
	HandleRun(t, "GET", "/static", "Moved Permanently")
	HandleRun(t, "GET", "/github", "Missing x-github-* and x-hub-* headers")

}
